---
##############################################################################
# SERVERS: Install and configure syslog-ng
##############################################################################
- hosts: servers
  name: bootstrap servers before running syslog-ng
  gather_facts: True
  become: yes
  become_method: sudo
  vars:
    bossjones__user: vagrant
    bossjones__group: vagrant
    timezone: 'America/New_York'
  environment:
    DEBIAN_FRONTEND: noninteractive
  roles:
    - role: boss-ansible-role-update-hosts
      boss__update__hosts__hosts_file: /etc/hosts
      # ansible group to use when finding ip addresses
      boss__update__hosts__ansible_group: "servers"

      boss__update__hosts__networking_interface: 'enp0s8' # enp0s8 (if vagrant)
      tags:
        - boss-ansible-role-update-hosts

    - role: boss-ansible-role-bootstrap
      # Disable raw commands to avoid sudo issues.
      boss__bootstrap_raw: False
      # Don't set domain on Travis.
      boss__bootstrap_domain: ''
      # Try bootstrapping a different IP address to avoid idempotency loop.
      # boss__bootstrap_ipv4: '127.0.1.2'
      # boss__hosts_file: /etc/hosts.molecule
      boss__bootstrap_admin_default_users:
        - name: bossjones
      boss__bootstrap_admin_groups: [ 'admins', 'staff', 'adm', 'sudo', 'bossjones' ]
      boss__bootstrap_admin_system: False
      tags:
        - boss-ansible-role-bootstrap

    - role: boss-ansible-role-core
      tags:
        - boss-ansible-role-core

    - role: boss-ansible-role-fact
      tags:
        - boss-ansible-role-fact

    - role: boss-ansible-role-environment
      tags:
        - boss-ansible-role-environment

    - role: boss-ansible-role-etckeeper
      tags:
        - boss-ansible-role-etckeeper

    # - role: geerlingguy.pip

    - role: boss-ansible-role-timezone
      timezone: 'America/New_York'
      timezone_update_hardware_clock: False
      tags:
        - boss-ansible-role-timezone

    - role: boss-ansible-role-ntp
      task: install
      bossjones__user: vagrant
      bossjones__group: vagrant
      timezone: 'America/New_York'
      timezone_update_hardware_clock: False
      # defaults file for ansible-ntp
      # Defines if host is ntp_master
      # set ntp_master to true on specific group_vars/group
      ntp_master: False

      # Define your ntp_master_servers
      ntp_master_servers:
        - 0.ubuntu.pool.ntp.org
        - 1.ubuntu.pool.ntp.org
        - 2.ubuntu.pool.ntp.org
        - 3.ubuntu.pool.ntp.org
      tags:
        - boss-ansible-role-ntp

    - role: boss-ansible-role-debug
      boss__debug__debug_variables_file: '/tmp/ansible_variables'
      boss__debug__dump_dir: '/etc/ansible_dumps'
      boss__debug__dump_type: 'seperate' # seperate
      tags:
        - boss-ansible-role-debug

    # - role: boss-ansible-role-tools
    #   task: tools
    #   bossjones__user: vagrant
    #   bossjones__group: vagrant
    #   tags:
    #     - boss-ansible-role-tools

# - hosts: masters
#   name: (masters) - Install and configure syslog-ng
#   gather_facts: True
#   become: yes
#   become_method: sudo
#   environment:
#     DEBIAN_FRONTEND: noninteractive
#   vars:
#     boss__ntp__timezone: 'America/New_York'

#   roles:
#     - role: ../
#       boss__syslogng__default_task: 'master'
#       boss__rsyslod__rsyslog_interface: 'enp0s8'
#       # NOTE: https://docs.debops.org/en/master/ansible/roles/debops.rsyslog/getting-started.html
#       # Enable network input channels and storage of remote logs in filesystem
#       boss__syslogng__syslogng_capabilities: [ 'network', 'remote-files' ]

#       # Specify which subnets can send remote logs through the firewall
#       # FIXME: https://blog.webernetz.net/2001db8-32-in-the-wild/
#       # boss__syslogng__host_allow: [ '192.0.2.0/24', '2001:db8::/32' ]
#       boss__syslogng__syslogng_host_allow: [ '192.168.1.1/16' ]

#       # SOURCE: https://www.rsyslog.com/sending-messages-to-a-remote-syslog-server/
#       # Mask log forwarding configuration defined elsewhere
#       boss__syslogng__syslogng_forward:
#         - '*.*  action(type="omfwd" target="{{boss__syslogng__syslogng_master_ip}}" port="{{boss__syslogng__syslogng_tcp_port}}" protocol="tcp" action.resumeRetryCount="100" queue.type="linkedList" queue.size="10000")'
#       # *.*  action(type="omfwd" target="192.0.2.2" port="10514" protocol="tcp" action.resumeRetryCount="100" queue.type="linkedList" queue.size="10000")
#       # this will de-couple the sending from the other logging actions,
#       # and prevent delays when the remote system is not reachable. Also,
#       # it will try to connect 100 times before it discards messages as
#       # undeliverable.
#       # the rest below is more or less a plain vanilla rsyslog.conf as
#       # many distros ship it - it's more for your reference...
#       boss__syslogng__syslogng_group_forward: []
#       # boss__syslogng__host_forward: []
#       # boss__syslogng__syslogng_host_forward:
#       #   - '*.*  action(type="omfwd" target="{{boss__syslogng__syslogng_master_ip}}" port="{{boss__syslogng__syslogng_tcp_port}}" protocol="tcp" action.resumeRetryCount="100" queue.type="linkedList" queue.size="10000")'

#       # Or, alternatively, forward logs to a different host
#       # boss__syslogng__host_forward: [ '*.* @other.{{ ansible_domain }}' ]

#       # Or, alternatively, forward logs to a different host
#       # boss__syslogng__syslogng_host_forward: [ '*.* @other.{{ ansible_domain }}' ]
#       # {{ hostvars[groups[boss__syslogng__master_group_label][0]]['ansible_' + boss__kubernetes__kubeadm__nfs_interface].ipv4.address }}:{{ item.remote }}

#       # {% if etcd_discovery == none and etcd_discovery_srv == none -%}
#       # {% macro initial_cluster() -%}
#       # {% for host in groups[etcd_peers_group] -%}
#       #   {% if loop.last -%}
#       # {{ host }}={{ etcd_peer_url_scheme }}://{{ hostvars[host][  "ansible_"+hostvars[host]["ansible_default_ipv4"]["interface"]  ]['ipv4']['address'] }}:{{ etcd_peer_port }}
#       #   {%- else -%}
#       # {{ host }}={{ etcd_peer_url_scheme }}://{{ hostvars[host][ "ansible_"+hostvars[host]["ansible_default_ipv4"]["interface"]  ]['ipv4']['address'] }}:{{ etcd_peer_port }},
#       #   {%- endif -%}
#       # {% endfor -%}
#       # {% endmacro -%}
#       # {% endif %}

#       tags:
#         - boss-ansible-role-syslog-ng


# - hosts: nodes
#   name: (nodes) - Install and configure syslog-ng
#   gather_facts: True
#   become: yes
#   become_method: sudo
#   environment:
#     DEBIAN_FRONTEND: noninteractive
#   vars:
#     boss__ntp__timezone: 'America/New_York'

#   roles:
#     - role: ../
#       boss__syslogng__default_task: 'client'
#       boss__rsyslod__rsyslog_interface: 'enp0s8'
#       boss__syslogng__syslogng_forward:
#         - '*.*  action(type="omfwd" target="{{boss__syslogng__syslogng_master_ip}}" port="{{boss__syslogng__syslogng_tcp_port}}" protocol="tcp" action.resumeRetryCount="100" queue.type="linkedList" queue.size="10000")'
#       tags:
#         - boss-ansible-role-syslog-ng
