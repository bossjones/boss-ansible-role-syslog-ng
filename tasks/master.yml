---
# tasks file for boss-ansible-role-rsyslogd

- name: Install required packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - '{{ boss__syslogng__syslogng_base_packages }}'
    - '{{ boss__syslogng__syslogng_tls_packages if boss__syslogng__syslogng_pki|bool else [] }}'
    - '{{ boss__syslogng__syslogng_packages }}'
  when: boss__syslogng__syslogng_enabled|bool

- name: Create required system group
  group:
    name: '{{ boss__syslogng__syslogng_group }}'
    state: 'present'
    system: True
  when: boss__syslogng__syslogng_unprivileged|bool and boss__syslogng__syslogng_group != 'root'

- name: Create required system user
  user:
    name: '{{ boss__syslogng__syslogng_user }}'
    group: '{{ boss__syslogng__syslogng_group }}'
    home: '{{ boss__syslogng__syslogng_home }}'
    shell: '/bin/false'
    state: 'present'
    createhome: False
    system: True
  when: boss__syslogng__syslogng_unprivileged|bool and boss__syslogng__syslogng_user != 'root'

- name: Fix directory permissions if needed
  file:
    path: '/var/spool/rsyslog'
    owner: '{{ boss__syslogng__syslogng_user }}'
    group: '{{ boss__syslogng__syslogng_file_group }}'
    mode: '0700'
  register: boss__syslogng__syslogng_register_unprivileged_files
  when: boss__syslogng__syslogng_unprivileged|bool and boss__syslogng__syslogng_user != 'root'

- name: Update directory and file permissions
  shell: |
    [ ! -d {{ boss__syslogng__syslogng_home }} ] || ( [ "$(stat -c '%G' {{ boss__syslogng__syslogng_home }})" = "{{ boss__syslogng__syslogng_group }}" ] || ( chown -v root:{{ boss__syslogng__syslogng_group }} {{ boss__syslogng__syslogng_home }} ; chmod -v 775 {{ boss__syslogng__syslogng_home }} ) )
    for i in {{ boss__syslogng__syslogng_default_logfiles | join(" ") }} ; do
      [ ! -f ${i} ] || ( [ "$(stat -c '%U' ${i})" = "{{ boss__syslogng__syslogng_file_owner }}" ] || chown -v {{ boss__syslogng__syslogng_file_owner }}:{{ boss__syslogng__syslogng_file_group }} ${i} )
    done
  register: boss__syslogng__syslogng_register_file_permissions
  when: boss__syslogng__syslogng_unprivileged|bool
  changed_when: boss__syslogng__syslogng_register_file_permissions.stdout != ''
  notify: [ 'Restart rsyslogd' ]

- name: Divert main rsyslog configuration
  command: dpkg-divert --quiet --local --divert /etc/rsyslog.conf.dpkg-divert --rename /etc/rsyslog.conf
  args:
    creates: '/etc/rsyslog.conf.dpkg-divert'
  # boss__syslogng__syslogng_enabled
  when: boss__syslogng__syslogng_enabled|bool
  # when: rsyslog__enabled|bool
  notify: [ 'Restart rsyslogd' ]


- name: Generate main rsyslog configuration
  template:
    src: 'etc/rsyslog.conf.j2'
    dest: '/etc/rsyslog.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart rsyslogd' ]
  when: boss__syslogng__syslogng_enabled|bool

- name: Revert the default configuration file
  shell: rm -f /etc/rsyslog.conf ; dpkg-divert --quiet --local --rename --remove /etc/rsyslog.conf
  args:
    removes: '/etc/rsyslog.conf.dpkg-divert'
    warn: False
  when: not boss__syslogng__syslogng_enabled|bool


- name: Divert the custom rsyslog configuration
  environment:
    LC_ALL: 'C'
  command: dpkg-divert --local --divert /etc/rsyslog.d/{{ item.divert_to | d(item.filename + ".dpkg-divert") }} --rename /etc/rsyslog.d/{{ item.filename }}
  args:
    creates: '/etc/rsyslog.d/{{ item.divert_to | d(item.filename + ".dpkg-divert") }}'
  register: boss__syslogng__syslogng_register_divert_rules
  with_flattened:
    - '{{ rsyslog_pools | d([]) }}'
    - '{{ boss__syslogng__syslogng_default_rules }}'
    - '{{ boss__syslogng__syslogng_rules }}'
    - '{{ boss__syslogng__syslogng_group_rules }}'
    - '{{ boss__syslogng__syslogng_host_rules }}'
    - '{{ boss__syslogng__syslogng_dependent_rules }}'
  when: (boss__syslogng__syslogng_enabled|bool and item.filename|d() and
         (item.state is undefined or item.state != 'absent') and
         (item.divert|d() and item.divert|bool))
  changed_when: boss__syslogng__syslogng_register_divert_rules.stdout.startswith("Adding 'local diversion of ")
  notify: [ 'Restart rsyslogd' ]

- name: Generate rsyslog configuration rules
  template:
    src: 'etc/rsyslog.d/rules.conf.j2'
    dest: '/etc/rsyslog.d/{{ item.filename | d((item.weight if item.weight|d() else boss__syslogng__syslogng_weight_map[item.type|d("rules")]) + "-" + (item.name|d("rules")) + "." + (item.suffix |d ("conf"))) }}'
    owner: '{{ item.owner | d("root") }}'
    group: '{{ item.group | d("root") }}'
    mode:  '{{ item.mode  | d("0644") }}'
  with_flattened:
    - '{{ rsyslog_pools | d([]) }}'
    - '{{ boss__syslogng__syslogng_default_rules }}'
    - '{{ boss__syslogng__syslogng_rules }}'
    - '{{ boss__syslogng__syslogng_group_rules }}'
    - '{{ boss__syslogng__syslogng_host_rules }}'
    - '{{ boss__syslogng__syslogng_dependent_rules }}'
  when: (boss__syslogng__syslogng_enabled|bool and (item.filename|d() or item.name|d()) and
         (item.state is undefined or item.state != 'absent') and
         (item.options|d() or item.sections|d()))
  notify: [ 'Restart rsyslogd' ]

- name: Remove custom config files when requested
  file:
    path: '/etc/rsyslog.d/{{ item.filename | d((item.weight if item.weight|d() else boss__syslogng__syslogng_weight_map[item.type|d("rules")]) + "-" + (item.name|d("rules")) + "." + (item.suffix | d("conf"))) }}'
    state: 'absent'
  with_flattened:
    - '{{ rsyslog_pools | d([]) }}'
    - '{{ boss__syslogng__syslogng_default_rules }}'
    - '{{ boss__syslogng__syslogng_rules }}'
    - '{{ boss__syslogng__syslogng_group_rules }}'
    - '{{ boss__syslogng__syslogng_host_rules }}'
    - '{{ boss__syslogng__syslogng_dependent_rules }}'
  when: (not boss__syslogng__syslogng_enabled|bool or
         ((item.filename|d() or item.name|d()) and
          (item.state|d() and item.state == 'absent')) and
         (item.options|d() or item.sections|d())) and
        (item.divert is undefined or not item.divert|bool)
  notify: [ 'Restart rsyslogd' ]


# FIXME: Added today 10/30/2018
- name: Remove custom config files when requested
  file:
    path: '/etc/rsyslog.d/{{ item.filename | d((item.weight if item.weight|d() else boss__syslogng__syslogng_weight_map[item.type|d("rules")]) + "-" + (item.name|d("rules")) + "." + (item.suffix | d("conf"))) }}'
    state: 'absent'
  with_flattened:
    - '{{ rsyslog_pools | d([]) }}'
    - '{{ boss__syslogng__syslogng_default_rules }}'
    - '{{ boss__syslogng__syslogng_rules }}'
    - '{{ boss__syslogng__syslogng_group_rules }}'
    - '{{ boss__syslogng__syslogng_host_rules }}'
    - '{{ boss__syslogng__syslogng_dependent_rules }}'
  when: (not boss__syslogng__syslogng_enabled|bool or
         ((item.filename|d() or item.name|d()) and
          (item.state|d() and item.state == 'absent')) and
         (item.options|d() or item.sections|d())) and
        (item.divert is undefined or not item.divert|bool)
  notify: [ 'Restart rsyslogd' ]

- name: Revert original rsyslog config rules
  shell: rm -f /etc/rsyslog.d/{{ item.filename }} ; dpkg-divert --quiet --local --rename --remove /etc/rsyslog.d/{{ item.filename }}
  args:
    removes: '/etc/rsyslog.d/{{ item.divert_to | d(item.filename + ".dpkg-divert") }}'
    warn: False
  with_flattened:
    - '{{ rsyslog_pools | d([]) }}'
    - '{{ boss__syslogng__syslogng_default_rules }}'
    - '{{ boss__syslogng__syslogng_rules }}'
    - '{{ boss__syslogng__syslogng_group_rules }}'
    - '{{ boss__syslogng__syslogng_host_rules }}'
    - '{{ boss__syslogng__syslogng_dependent_rules }}'
  when: ((not boss__syslogng__syslogng_enabled|bool or
          (item.filename|d() and (item.state|d() and item.state == 'absent'))) and
         (item.divert|d() and item.divert|bool))
  notify: [ 'Restart rsyslogd' ]
